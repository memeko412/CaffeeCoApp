@model List<AppUser>
@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUser> UserManager

@{
    int pageIndex = (int)ViewData["PageIndex"]!;
    int totalPages = (int)ViewData["TotalPages"]!;
    string search = (string)ViewData["Search"]!;
    string column = (string)ViewData["Column"]!;
    string orderBy = (string)ViewData["OrderBy"]!;
    string role = (string)ViewData["Role"]!;

    HtmlString getOrdArrow(string tableColumn)
    {
        if (tableColumn == column)
        {
            if (orderBy == "asc") return new HtmlString("<i class='bi bi-arrow-up'></i>");
            else return new HtmlString("<i class='bi bi-arrow-down'></i>");
        }
        return new HtmlString("");
    }
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>@TempData["Error"]</strong> Please try again.
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>@TempData["Success"]</strong>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<h2 class="text-center mb-5">List of Users</h2>

<form class="row g-3 mb-3">
    <div class="col-lg-2 col-md-4">
        <select class="form-select" name="role" asp-for="@role" onchange="this.form.submit()">
            <option value="">All Roles</option>
            <option value="admin">Admin</option>
            <option value="staff">Staff</option>
            <option value="client">Client</option>
        </select>
    </div>
    <div class="col-lg-6 col-md-12 d-flex">
        <input class="form-control me-2" type="search" name="search" value="@search" placeholder="Search by user's name" aria-label="Search">
        <button class="btn btn-outline-success" type="submit">Search</button>
    </div>

</form>
 

<script>
    function sortTable(column) {
        let orderBy = "desc";
        let currCol = "@column";
        let currOrd = "@orderBy";
        if (column === currCol) {
            if (currOrd == "asc") orderBy = "desc";
            else orderBy = "asc";
        }
        window.location.href = "?search=@(search)&column=" + column + "&orderBy=" + orderBy;
    }
</script>

<table class="table">
    <thead>
        <tr>
            <th style="cursor: pointer;" onclick="sortTable('Name')">Name @getOrdArrow("Name")</th>
            <th style="cursor: pointer;" onclick="sortTable('Email')">Email @getOrdArrow("Email")</th>
            <th>Role</th>
            <th style="cursor: pointer;" onclick="sortTable('CreatedAt')">Created At @getOrdArrow("CreatedAt")</th>
            <th>Action</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@(user.FirstName + " " + user.LastName)</td>
                <td>@user.Email</td>
                <td>
                    @{
                        var roles = await UserManager.GetRolesAsync(user);
                        var rolesString = String.Join(", ", roles);

                        string roleBadge = "bg-warning text-dark";
                        if (roles.Contains("admin"))
                        {
                            roleBadge = "bg-danger";
                        }
                        else if (roles.Contains("staff"))
                        {
                            roleBadge = "bg-info text-dark";
                        } else if (roles.Contains("client"))
                        {
                            roleBadge = "bg-warning text-dark";
                        }

                        <span class="badge @roleBadge">@rolesString</span>
                    }
                </td>
                <td>@user.CreatedAt.ToString("MM/dd/yyyy")</td>
                <td>
                    <a class="btn btn-primary btn-sm" asp-controller="Users" asp-action="Details" asp-route-id="@user.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>

</table>

<nav>
    <ul class="pagination">
        @for (int i = 1; i <= totalPages; i++)
        {
            string active = "";
            if (i == pageIndex) active = "active";
            <li class="page-item @active">
                <a class="page-link" asp-route-pageIndex="@i"
                   asp-route-search="@search" asp-route-column="@column" asp-route-orderBy="@orderBy">@i</a>
            </li>
        }
    </ul>
</nav>
